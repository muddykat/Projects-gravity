<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.checkpointr==room){
phy_position_x = global.checkpointx
phy_position_y = global.checkpointy
}
alarm[1]=1*15
/// Variables
global.p_position=0
neg=false
pos=false
angle=false;
jmp = -3;
hsp = 0;
vsp = 0;
jsp = 12;
grav = 0.5;
grd = 1;
msp = 10;
ssp = 15;
acc = 2;
wjp = 1;
face = 1;
move = 0;
a = 0;
b = false;
c = false;
d = 0;
j = 2;
z = random(100);
e=1
active=true
unactive=false
hidden=false
unhidden=true
time=60
alarm[0]=60

var_sprite_width = sprite_get_width(spr_player);
var_sprite_height = sprite_get_height(spr_player);
camera();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset gravity and view to 0
physics_world_gravity(0,10)
global.p_position=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_world_gravity(0,10)
angle=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_guiBar</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.life-=.25
alarm[1]=1*15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.glitched = !global.glitched
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movement();
//cam_step();
collisions();
render();
rotation();


if(d&lt;=0)
d=0

if(d&gt;0)
if(b==true)
a-=0.5

if(a&lt;=0)
a=0

if(d&gt;0)
if(a==0 &amp;&amp; place_free(mouse_x,mouse_y) &amp;&amp; b==true)
{
phy_position_x=mouse_x
phy_position_y=mouse_y
b = false
if(keyboard_check(ord("Z")) &amp;&amp; a==0)
d-=1
a = 10
}

if(!place_free(x,y+1)){
if(c==true)
d=0
c=false
}

if(image_alpha&lt;1)
image_alpha+=.03+choose(0,0,0,0,0.2,.1,.02,0,0,0,-.1,-.02)

if(phy_linear_velocity_y&lt;-220)
phy_linear_velocity_y=-220


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// jump glitch
/*
if(ukey &amp;&amp; keyboard_check(ord("Z")) &amp;&amp; j&gt;0 &amp;&amp; a==0)
if(place_free(x,y-64) || place_free(x,y+64)){
phy_position_y += jmp
j-=1
a = 10
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gravity block ini

//player finder(change varible to suit position)
with(obj_gravity_bloc)
{
if(place_meeting(x-3,y,obj_player))
{
global.p_position=3
}else
if(place_meeting(x+3,y,obj_player))
{
global.p_position=1
}else
if(place_meeting(x,y-3,obj_player))
{
global.p_position=0
}else
if(place_meeting(x,y+3,obj_player))
{
global.p_position=2
}
}

// gravity application(apply gravity in the right direction depending on the varible(global.p_position)

with(obj_gravity_bloc){
if(place_meeting(x,y-2,obj_player)){
if(global.p_position==0)
physics_world_gravity(0,10)
}
else
if(place_meeting(x+2,y,obj_player)){
if(global.p_position==1)
physics_world_gravity(-10,0)
}
else
if(place_meeting(x,y+2,obj_player)){
if(global.p_position==2)
physics_world_gravity(0,-10)
}
else
if(place_meeting(x-2,y,obj_player)){
if(global.p_position==3)
physics_world_gravity(10,0)
}
}

//apply changes to the view 
if(global.p_position==0)
{
if!(view_angle=360)
if(view_angle&gt;180 &amp;&amp; view_angle&lt;360)
pos=true
else
if!(view_angle=0)
if(view_angle&gt;0)
neg=true
else
if(view_angle&lt;0)
pos=true
}

else
if(global.p_position==1)
{
if!(view_angle=90)
if(view_angle&gt;90)
neg=true
else
if(view_angle&lt;90)
pos=true
}
else
if(global.p_position==2)
{
if!(view_angle=180)
if(view_angle&gt;180)
neg=true
else
if(view_angle&lt;180)
pos=true
}
else
if(global.p_position==3)
{
if(view_angle&lt;=0)
if!(view_angle=-90)
neg=true
else
if!(view_angle=270)
if(view_angle&gt;270)
neg=true
else
if(view_angle&lt;270)
if!(view_angle=-90)
pos=true
}
if(global.p_position==3)
{
if(view_angle&gt;=180)
if!(view_angle=270)
pos=true
else
if!(view_angle=270)
if(view_angle&lt;270)
pos=true
}
if(neg==true){
view_angle-=10
neg=false
}
if(pos==true){
view_angle+=10
pos=false
}
if(view_angle&lt;0 &amp;&amp; pos==false &amp;&amp; neg==false)
{
if(global.p_position==3)
if(view_angle=-90)
view_angle=270
/*if(global.p_position==2)
view_angle=180
if(global.p_position==1)
view_angle=90
if(global.p_position==0)
view_angle=0*/
}
if(pos==false &amp;&amp;neg==false &amp;&amp; view_angle==360)
view_angle=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_gravity_bloc">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = room_speed*4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_buzzsaw">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//colision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move+=0.04;
z = random(100)

var g_Time = shader_get_uniform(shader0,"g_Time");

var m_FilterColor = shader_get_uniform(shader0,"m_FilterColor");
var m_ColorDensity = shader_get_uniform(shader0,"m_ColorDensity");
var m_RandomValue = shader_get_uniform(shader0,"m_RandomValue");
var m_NoiseDensity = shader_get_uniform(shader0,"m_NoiseDensity");
var m_ScratchDensity = shader_get_uniform(shader0,"m_ScratchDensity");

if(d&gt;0)
if(keyboard_check(ord("Z")) || c==true){
shader_set(shader0);

shader_set_uniform_f(g_Time,move);
shader_set_uniform_f(m_FilterColor,0.82,random(1),random(1),random(1));
shader_set_uniform_f(m_ColorDensity,0.7);
shader_set_uniform_f(m_RandomValue,random(1.0));
shader_set_uniform_f(m_NoiseDensity,0.4);
shader_set_uniform_f(m_ScratchDensity,0.6);

draw_self();

if(mouse_check_button(mb_left) &amp;&amp; d&gt;0){
if(z&lt;=20)
c=false
image_alpha=random_range(0.3,0.8)
draw_sprite_ext(spr_player,0,mouse_x,mouse_y,image_xscale,image_yscale,image_angle,c_white,random(1))
}


}else{
draw_self();
shader_reset();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con = obj_controller;

texture_set_repeat(false);
if con.shader_enabled and !con.full_screen_effect shader_set(shd_invert);
    shader_set_uniform_f(con.uni_time, con.var_time_var);
    shader_set_uniform_f(con.uni_mouse_pos, con.var_mouse_pos_x, con.var_mouse_pos_y);
    shader_set_uniform_f(con.uni_resolution, var_sprite_width, var_sprite_height);
    draw_self();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump ini




if(global.p_position==0){
if(place_meeting(x,y+2,par_solid))
if!(place_meeting(x,y+2,obj_unhiddenblock))
if!(place_meeting(x,y+2,obj_hiddenblock))
physics_apply_impulse(x,y,0,-3)
}
if(global.p_position==1){
if(place_meeting(x-2,y,par_solid))
if!(place_meeting(x-2,y,obj_unhiddenblock))
if!(place_meeting(x-2,y,obj_hiddenblock))
physics_apply_impulse(x,y,3,0)
}
if(global.p_position==2){
if!(place_meeting(x,y-2,obj_unhiddenblock))
if!(place_meeting(x,y-2,obj_hiddenblock))
if(place_meeting(x,y-2,par_solid))
physics_apply_impulse(x,y,0,3)
}
if(global.p_position==3){
if(place_meeting(x+2,y,par_solid))
if!(place_meeting(x+2,y,obj_unhiddenblock))
if!(place_meeting(x+2,y,obj_hiddenblock))
physics_apply_impulse(x,y,-3,0)
}

















//failed codes
/*if(angle==false){
if(place_meeting(x,y+2,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,-3)
}
if(place_meeting(x,y+2,obj_gravity_bloc) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,-3)
}
/*if(angle==true){
if(place_meeting(x,y-2,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,3)
}

if(place_meeting(x,y-2,obj_hiddenblock) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,3)
}
if(place_meeting(x,y-2,obj_unhiddenblock) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,3)
}
}
}
/*if(angle==true)
view_angle+=10
if(angle==false)
view_angle-=10

if(view_angle&gt;=180)
view_angle=180
if(view_angle&lt;=0)
view_angle=0
*/

//gravity jumping
/*
if(obj_gravity_bloc.p_position==0){
if(place_meeting(x,y+2,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,-3)
}
if(place_meeting(x,y+2,obj_gravity_bloc) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,-3)
}
}
if(obj_gravity_bloc.p_position==1){
if(place_meeting(x-2,y,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,3,0)
}
if(place_meeting(x-2,y,obj_gravity_bloc) &amp;&amp; ukey){
physics_apply_impulse(x,y,3,0)
}
}
if(obj_gravity_bloc.p_position==2){
if(place_meeting(x,y-2,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,3)
}
if(place_meeting(x,y-2,obj_gravity_bloc) &amp;&amp; ukey){
physics_apply_impulse(x,y,0,3)
}
}
if(obj_gravity_bloc.p_position==3){
if(place_meeting(x+2,y,obj_block) &amp;&amp; ukey){
physics_apply_impulse(x,y,-3,0)
}
if(place_meeting(x+2,y,obj_gravity_bloc) &amp;&amp; ukey){
physics_apply_impulse(x,y,-3,0)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_menu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.349999994039536</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>9</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.150000005960464</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0.375</point>
    <point>32,0.375</point>
    <point>32,31.5</point>
    <point>0,31.5</point>
  </PhysicsShapePoints>
</object>
